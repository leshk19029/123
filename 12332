-- Services

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local HTTPService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")

-- Variables

local LocalPlayer = Players.LocalPlayer
local Viewport = workspace.CurrentCamera.ViewportSize
local Mouse = LocalPlayer:GetMouse()

-- Library

local SkyUI = {}

function SkyUI:AnimateElement(Object, Target, OnComplete)
	local Animation = TweenService:Create(Object, TweenInfo.new(0.2, Enum.EasingStyle.Quint, Enum.EasingDirection.InOut), Target)
	Animation.Completed:Connect(OnComplete or function() end)
	Animation:Play()
end

function SkyUI:CheckOptions(Defaults, Options)
	Options = Options or {}

	for Key, Value in pairs(Defaults) do
		if Options[Key] == nil and Options[Key] ~= false then
			Options[Key] = Value
		end
	end

	return Options
end

function SkyUI:CreateInterface(Options)
	Options = SkyUI:CheckOptions({
		Name = "SkyUI"
	}, Options)

	local Interface = {
		CurrentPage = nil	
	}

	-- StarterGui.SkyUI
	Interface["g1"] = Instance.new("ScreenGui", CoreGui)
	Interface["g1"].Name = [[SkyUI]]
	Interface["g1"].IgnoreGuiInset = true
	
	Interface["scale1"] = Instance.new("UIScale", Interface["g1"])

	-- StarterGui.SkyUI.MainFrame
	Interface["f2"] = Instance.new("Frame", Interface["g1"])
	Interface["f2"].BorderSizePixel = 0
	Interface["f2"].BackgroundColor3 = Color3.fromRGB(23, 23, 23)
	Interface["f2"].AnchorPoint = Vector2.new(0.5, 0.5)
	Interface["f2"].Size = UDim2.new(0, 550, 0, 400)
	Interface["f2"].Position = UDim2.new(0.5, 0, 0.5, 0)
	Interface["f2"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["f2"].Name = [[MainFrame]]

	-- StarterGui.SkyUI.MainFrame.UICorner
	Interface["c3"] = Instance.new("UICorner", Interface["f2"])

	-- StarterGui.SkyUI.MainFrame.Shadow
	Interface["s4"] = Instance.new("Frame", Interface["f2"])
	Interface["s4"].ZIndex = 0
	Interface["s4"].BorderSizePixel = 0
	Interface["s4"].Size = UDim2.new(1, 0, 1, 0)
	Interface["s4"].Name = [[Shadow]]
	Interface["s4"].BackgroundTransparency = 1

	-- StarterGui.SkyUI.MainFrame.Shadow.ShadowImage
	Interface["i5"] = Instance.new("ImageLabel", Interface["s4"])
	Interface["i5"].ZIndex = 0
	Interface["i5"].BorderSizePixel = 0
	Interface["i5"].SliceCenter = Rect.new(49, 49, 450, 450)
	Interface["i5"].ScaleType = Enum.ScaleType.Slice
	Interface["i5"].ImageTransparency = 0.5
	Interface["i5"].ImageColor3 = Color3.fromRGB(0, 0, 0)
	Interface["i5"].AnchorPoint = Vector2.new(0.5, 0.5)
	Interface["i5"].Image = [[rbxassetid://6014261993]]
	Interface["i5"].Size = UDim2.new(1, 47, 1, 47)
	Interface["i5"].BackgroundTransparency = 1
	Interface["i5"].Name = [[ShadowImage]]
	Interface["i5"].Position = UDim2.new(0.5, 0, 0.5, 0)

	-- StarterGui.SkyUI.MainFrame.Header
	Interface["h6"] = Instance.new("Frame", Interface["f2"])
	Interface["h6"].BorderSizePixel = 0
	Interface["h6"].BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Interface["h6"].Size = UDim2.new(1, 0, 0, 40)
	Interface["h6"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["h6"].Name = [[Header]]

	-- StarterGui.SkyUI.MainFrame.Header.Line
	Interface["l7"] = Instance.new("Frame", Interface["h6"])
	Interface["l7"].ZIndex = 2
	Interface["l7"].BorderSizePixel = 0
	Interface["l7"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interface["l7"].AnchorPoint = Vector2.new(0, 1)
	Interface["l7"].Size = UDim2.new(1, 0, 0, 1)
	Interface["l7"].Position = UDim2.new(0, 0, 1, 0)
	Interface["l7"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["l7"].Name = [[Line]]
	Interface["l7"].BackgroundTransparency = 0.95

	-- StarterGui.SkyUI.MainFrame.Header.NameLabel
	Interface["n8"] = Instance.new("TextLabel", Interface["h6"])
	Interface["n8"].BorderSizePixel = 0
	Interface["n8"].TextXAlignment = Enum.TextXAlignment.Left
	Interface["n8"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interface["n8"].TextSize = 18
	Interface["n8"].FontFace = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
	Interface["n8"].TextColor3 = Color3.fromRGB(255, 255, 255)
	Interface["n8"].BackgroundTransparency = 1
	Interface["n8"].Size = UDim2.new(1, 0, 1, 0)
	Interface["n8"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["n8"].Text = Options.Name
	Interface["n8"].Name = [[NameLabel]]

	-- StarterGui.SkyUI.MainFrame.Header.NameLabel.UIPadding
	Interface["p9"] = Instance.new("UIPadding", Interface["n8"])
	Interface["p9"].PaddingLeft = UDim.new(0, 14)

	-- StarterGui.SkyUI.MainFrame.Header.CloseBtn
	Interface["x10"] = Instance.new("ImageLabel", Interface["h6"])
	Interface["x10"].BorderSizePixel = 0
	Interface["x10"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interface["x10"].AnchorPoint = Vector2.new(1, 0)
	Interface["x10"].Image = [[rbxassetid://10747384394]]
	Interface["x10"].Size = UDim2.new(0, 20, 0, 20)
	Interface["x10"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["x10"].BackgroundTransparency = 1
	Interface["x10"].Name = [[CloseBtn]]
	Interface["x10"].Position = UDim2.new(1, -8, 0, 10)

	-- StarterGui.SkyUI.MainFrame.Header.MinBtn
	Interface["m11"] = Instance.new("ImageLabel", Interface["h6"])
	Interface["m11"].BorderSizePixel = 0
	Interface["m11"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interface["m11"].AnchorPoint = Vector2.new(1, 0)
	Interface["m11"].Image = [[rbxassetid://10734896206]]
	Interface["m11"].Size = UDim2.new(0, 20, 0, 20)
	Interface["m11"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["m11"].BackgroundTransparency = 1
	Interface["m11"].Name = [[MinBtn]]
	Interface["m11"].Position = UDim2.new(1, -33, 0, 10)

	-- StarterGui.SkyUI.MainFrame.Header.UICorner
	Interface["c12"] = Instance.new("UICorner", Interface["h6"])

	-- StarterGui.SkyUI.MainFrame.Header.Extension
	Interface["e13"] = Instance.new("Frame", Interface["h6"])
	Interface["e13"].BorderSizePixel = 0
	Interface["e13"].BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Interface["e13"].AnchorPoint = Vector2.new(0, 1)
	Interface["e13"].Size = UDim2.new(1, 0, 0.25, 0)
	Interface["e13"].Position = UDim2.new(0, 0, 1, 0)
	Interface["e13"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["e13"].Name = [[Extension]]

	-- StarterGui.SkyUI.MainFrame.Content
	Interface["ct14"] = Instance.new("Frame", Interface["f2"])
	Interface["ct14"].BorderSizePixel = 0
	Interface["ct14"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interface["ct14"].AnchorPoint = Vector2.new(1, 0)
	Interface["ct14"].Size = UDim2.new(1, -180, 1, -40)
	Interface["ct14"].Position = UDim2.new(1, 0, 0, 40)
	Interface["ct14"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["ct14"].Name = [[Content]]
	Interface["ct14"].BackgroundTransparency = 1

	-- StarterGui.SkyUI.MainFrame.Sidebar
	Interface["sb15"] = Instance.new("Frame", Interface["f2"])
	Interface["sb15"].BorderSizePixel = 0
	Interface["sb15"].BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Interface["sb15"].Size = UDim2.new(0, 180, 1, -41)
	Interface["sb15"].Position = UDim2.new(0, 0, 0, 40)
	Interface["sb15"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["sb15"].Name = [[Sidebar]]

	-- StarterGui.SkyUI.MainFrame.Sidebar.UICorner
	Interface["c16"] = Instance.new("UICorner", Interface["sb15"])

	-- StarterGui.SkyUI.MainFrame.Sidebar.TopCover
	Interface["tc17"] = Instance.new("Frame", Interface["sb15"])
	Interface["tc17"].BorderSizePixel = 0
	Interface["tc17"].BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Interface["tc17"].Size = UDim2.new(1, 0, 0, 20)
	Interface["tc17"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["tc17"].Name = [[TopCover]]

	-- StarterGui.SkyUI.MainFrame.Sidebar.BottomCover
	Interface["bc18"] = Instance.new("Frame", Interface["sb15"])
	Interface["bc18"].BorderSizePixel = 0
	Interface["bc18"].BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Interface["bc18"].AnchorPoint = Vector2.new(0, 1)
	Interface["bc18"].Size = UDim2.new(1, 0, 0, 20)
	Interface["bc18"].Position = UDim2.new(0, 0, 1, 0)
	Interface["bc18"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["bc18"].Name = [[BottomCover]]

	-- StarterGui.SkyUI.MainFrame.Sidebar.Border
	Interface["b19"] = Instance.new("Frame", Interface["sb15"])
	Interface["b19"].ZIndex = 2
	Interface["b19"].BorderSizePixel = 0
	Interface["b19"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interface["b19"].AnchorPoint = Vector2.new(1, 0)
	Interface["b19"].Size = UDim2.new(0, 1, 1, 0)
	Interface["b19"].Position = UDim2.new(1, 0, 0, 0)
	Interface["b19"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["b19"].Name = [[Border]]
	Interface["b19"].BackgroundTransparency = 0.95

	-- StarterGui.SkyUI.MainFrame.Sidebar.Items
	Interface["it20"] = Instance.new("Frame", Interface["sb15"])
	Interface["it20"].BorderSizePixel = 0
	Interface["it20"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Interface["it20"].Size = UDim2.new(1, 0, 1, 0)
	Interface["it20"].BorderColor3 = Color3.fromRGB(0, 0, 0)
	Interface["it20"].Name = [[Items]]
	Interface["it20"].BackgroundTransparency = 1

	-- StarterGui.SkyUI.MainFrame.Sidebar.Items.UIPadding
	Interface["p21"] = Instance.new("UIPadding", Interface["it20"])
	Interface["p21"].PaddingTop = UDim.new(0, 8)
	Interface["p21"].PaddingRight = UDim.new(0, 10)
	Interface["p21"].PaddingLeft = UDim.new(0, 10)
	Interface["p21"].PaddingBottom = UDim.new(0, 8)

	-- StarterGui.SkyUI.MainFrame.Sidebar.Items.UIListLayout
	Interface["l22"] = Instance.new("UIListLayout", Interface["it20"])
	Interface["l22"].Padding = UDim.new(0, 7)
	Interface["l22"].SortOrder = Enum.SortOrder.LayoutOrder
	
	-- StarterGui.SkyUI.Alerts
	Interface["a23"] = Instance.new("Frame", Interface["g1"]);
	Interface["a23"]["BorderSizePixel"] = 0;
	Interface["a23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
	Interface["a23"]["AnchorPoint"] = Vector2.new(1, 0);
	Interface["a23"]["Size"] = UDim2.new(0, 300, 1, -10);
	Interface["a23"]["Position"] = UDim2.new(1, 0, 0, 0);
	Interface["a23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
	Interface["a23"]["Name"] = [[Alerts]];
	Interface["a23"]["BackgroundTransparency"] = 1;

	-- StarterGui.SkyUI.Alerts.UIListLayout
	Interface["l24"] = Instance.new("UIListLayout", Interface["a23"]);
	Interface["l24"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
	Interface["l24"]["Padding"] = UDim.new(0, 10);
	Interface["l24"]["VerticalAlignment"] = Enum.VerticalAlignment.Bottom;
	Interface["l24"]["SortOrder"] = Enum.SortOrder.LayoutOrder;

	
	Interface["x10"].InputBegan:Connect(function(Input, GPE)
		if GPE then return end

		if Input.UserInputType == Enum.UserInputType.MouseButton1 then
			Interface:Remove()
		end
	end)
	
	local DragArea = Interface["h6"]

	local IsDragging
	local DragInput
	local DragStartPosition
	local StartPosition

	function SkyUI:_MoveInterface(Input)
		local Delta = Input.Position - DragStartPosition
		DragArea.Parent.Position = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
	end

	DragArea.InputBegan:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then
			IsDragging = true
			DragStartPosition = Input.Position
			StartPosition = DragArea.Parent.Position

			Input.Changed:Connect(function()
				if Input.UserInputState == Enum.UserInputState.End then
					IsDragging = false
				end
			end)
		end
	end)

	DragArea.InputChanged:Connect(function(Input)
		if Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch then
			DragInput = Input
		end
	end)

	UserInputService.InputChanged:Connect(function(Input)
		if Input == DragInput and IsDragging then
			SkyUI:_MoveInterface(Input)
		end
	end)
	
	function Interface:ShowAlert(Options)
		Options = SkyUI:CheckOptions({
			Title = "Alert",
			Message = "This is an example alert!",
			Action = {
				Name = "Okay!",
				Function = function()
					
				end,
			}
		}, Options)
		
		local Alert = {
			IsHovered = false,
			IsPressed = false
		}
		
		-- StarterGui.SkyUI.Alert
		Alert["f25"] = Instance.new("Frame", Interface["a23"]);
		Alert["f25"]["BorderSizePixel"] = 0;
		Alert["f25"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23);
		Alert["f25"]["AnchorPoint"] = Vector2.new(1, 1);
		Alert["f25"]["Size"] = UDim2.new(0, 279, 0, 155);
		Alert["f25"]["Position"] = UDim2.new(1, -10, 1, -10);
		Alert["f25"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Alert["f25"]["Name"] = [[Alert]];

		-- StarterGui.SkyUI.Alert.UICorner
		Alert["c26"] = Instance.new("UICorner", Alert["f25"]);
		
		-- StarterGui.SkyUI.Alert.UIScale
		Alert["s27"] = Instance.new("UIScale", Alert["f25"]);
		Alert["s27"]["Scale"] = 0.5

		-- StarterGui.SkyUI.Alert.UIStroke
		Alert["st28"] = Instance.new("UIStroke", Alert["f25"]);
		Alert["st28"]["Transparency"] = 0.9;
		Alert["st28"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
		Alert["st28"]["Color"] = Color3.fromRGB(255, 255, 255);

		-- StarterGui.SkyUI.Alert.ActionBtn
		Alert["ab29"] = Instance.new("TextLabel", Alert["f25"]);
		Alert["ab29"]["BorderSizePixel"] = 0;
		Alert["ab29"]["BackgroundColor3"] = Color3.fromRGB(29, 29, 29);
		Alert["ab29"]["TextSize"] = 16;
		Alert["ab29"]["TextTransparency"] = 0.2;
		Alert["ab29"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
		Alert["ab29"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
		Alert["ab29"]["AnchorPoint"] = Vector2.new(0, 1);
		Alert["ab29"]["Size"] = UDim2.new(1, -20, 0, 35);
		Alert["ab29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Alert["ab29"]["Text"] = [[Okay!]];
		Alert["ab29"]["Name"] = [[ActionBtn]];
		Alert["ab29"]["Position"] = UDim2.new(0, 10, 1.008, -10);
		Alert["ab29"]["Visible"] = false
		Alert["ab29"]["ZIndex"] = 10

		-- StarterGui.SkyUI.Alert.ActionBtn.UICorner
		Alert["c30"] = Instance.new("UICorner", Alert["ab29"]);
		Alert["c30"]["CornerRadius"] = UDim.new(0, 5);

		-- StarterGui.SkyUI.Alert.ActionBtn.UIStroke
		Alert["st31"] = Instance.new("UIStroke", Alert["ab29"]);
		Alert["st31"]["Transparency"] = 0.96;
		Alert["st31"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
		Alert["st31"]["Color"] = Color3.fromRGB(255, 255, 255);

		-- StarterGui.SkyUI.Alert.AlertHeader
		Alert["ah32"] = Instance.new("Frame", Alert["f25"]);
		Alert["ah32"]["BorderSizePixel"] = 0;
		Alert["ah32"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
		Alert["ah32"]["Size"] = UDim2.new(1, 0, -0.06107, 40);
		Alert["ah32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Alert["ah32"]["Name"] = [[AlertHeader]];

		-- StarterGui.SkyUI.Alert.AlertHeader.Line
		Alert["l33"] = Instance.new("Frame", Alert["ah32"]);
		Alert["l33"]["ZIndex"] = 2;
		Alert["l33"]["BorderSizePixel"] = 0;
		Alert["l33"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Alert["l33"]["AnchorPoint"] = Vector2.new(0, 1);
		Alert["l33"]["Size"] = UDim2.new(1, 0, 0, 1);
		Alert["l33"]["Position"] = UDim2.new(0, 0, 1, 0);
		Alert["l33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Alert["l33"]["Name"] = [[Line]];
		Alert["l33"]["BackgroundTransparency"] = 0.95;

		-- StarterGui.SkyUI.Alert.AlertHeader.AlertTitle
		Alert["at34"] = Instance.new("TextLabel", Alert["ah32"]);
		Alert["at34"]["BorderSizePixel"] = 0;
		Alert["at34"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		Alert["at34"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Alert["at34"]["TextSize"] = 18;
		Alert["at34"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
		Alert["at34"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
		Alert["at34"]["BackgroundTransparency"] = 1;
		Alert["at34"]["Size"] = UDim2.new(1, 0, 1, 0);
		Alert["at34"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Alert["at34"]["Text"] = Options.Title;
		Alert["at34"]["Name"] = [[AlertTitle]];

		-- StarterGui.SkyUI.Alert.AlertHeader.AlertTitle.UIPadding
		Alert["p35"] = Instance.new("UIPadding", Alert["at34"]);
		Alert["p35"]["PaddingLeft"] = UDim.new(0, 10);

		-- StarterGui.SkyUI.Alert.AlertHeader.UICorner
		Alert["c36"] = Instance.new("UICorner", Alert["ah32"]);

		-- StarterGui.SkyUI.Alert.AlertHeader.Extension
		Alert["e37"] = Instance.new("Frame", Alert["ah32"]);
		Alert["e37"]["BorderSizePixel"] = 0;
		Alert["e37"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
		Alert["e37"]["AnchorPoint"] = Vector2.new(0, 1);
		Alert["e37"]["Size"] = UDim2.new(1, 0, 0.25, 0);
		Alert["e37"]["Position"] = UDim2.new(0, 0, 1, 0);
		Alert["e37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Alert["e37"]["Name"] = [[Extension]];

		-- StarterGui.SkyUI.Alert.AlertHeader.LocalScript
		Alert["ls38"] = Instance.new("LocalScript", Alert["ah32"]);

		-- StarterGui.SkyUI.Alert.AlertHeader.CloseIcon
		Alert["ci39"] = Instance.new("ImageLabel", Alert["ah32"]);
		Alert["ci39"]["BorderSizePixel"] = 0;
		Alert["ci39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Alert["ci39"]["AnchorPoint"] = Vector2.new(1, 0);
		Alert["ci39"]["Image"] = [[rbxassetid://10747384394]];
		Alert["ci39"]["Size"] = UDim2.new(0, 20, 0, 20);
		Alert["ci39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Alert["ci39"]["BackgroundTransparency"] = 1;
		Alert["ci39"]["Name"] = [[CloseIcon]];
		Alert["ci39"]["Position"] = UDim2.new(1, -8, 0, 5);
		Alert["ci39"]["ZIndex"] = 10

		-- StarterGui.SkyUI.Alert.MessageText
		Alert["mt40"] = Instance.new("TextLabel", Alert["f25"]);
		Alert["mt40"]["TextWrapped"] = true;
		Alert["mt40"]["BorderSizePixel"] = 0;
		Alert["mt40"]["TextXAlignment"] = Enum.TextXAlignment.Left;
		Alert["mt40"]["TextYAlignment"] = Enum.TextYAlignment.Top;
		Alert["mt40"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Alert["mt40"]["TextSize"] = 18;
		Alert["mt40"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
		Alert["mt40"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
		Alert["mt40"]["BackgroundTransparency"] = 1;
		Alert["mt40"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
		Alert["mt40"]["Size"] = UDim2.new(1, -20, 0.427, 0);
		Alert["mt40"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		Alert["mt40"]["Text"] = Options.Message;
		Alert["mt40"]["Name"] = [[MessageText]];
		Alert["mt40"]["Position"] = UDim2.new(0.5, 0, 0.44877, 0);
		
		Alert["ib41"] = Instance.new("ImageButton", Alert["f25"]);
		Alert["ib41"]["BorderSizePixel"] = 0;
		Alert["ib41"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
		Alert["ib41"]["Size"] = UDim2.new(1, 0, 1, 0);
		Alert["ib41"]["BackgroundTransparency"] = 1;
		Alert["ib41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
		
		SkyUI:AnimateElement(Alert["s27"], {Scale = 1})
		
		function Alert:Close()
			SkyUI:AnimateElement(Alert["s27"], {Scale = 0.8})
			wait(0.1)
			Alert["f25"]:Destroy()
		end
		
		Alert["ci39"].InputBegan:Connect(function(Input, GPE)
			if GPE then return end

			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				Alert.IsPressed = true
				Alert:Close()
			end
		end)
		
		if Options.Action == false then
			Alert["mt40"].Size = UDim2.new(1, -20, 0.71, 0)
			Alert["mt40"].Position = UDim2.new(0.5, 0, 0.63, 0)
			Alert["ab29"].Visible = false
		else
			Alert["ab29"].Visible = true
			Alert["ab29"].Text = Options.Action.Name

			Alert["ab29"].MouseEnter:Connect(function()
				Alert.IsHovered = true

				SkyUI:AnimateElement(Alert["ab29"], {TextTransparency = 0})
				SkyUI:AnimateElement(Alert["st31"], {Transparency = 0.9})
			end)

			Alert["ab29"].MouseLeave:Connect(function()
				Alert.IsHovered = false

				if not Alert.IsPressed then
					SkyUI:AnimateElement(Alert["ab29"], {TextTransparency = 0.2})
					SkyUI:AnimateElement(Alert["st31"], {Transparency = 0.96})
				end
			end)

			Alert["ab29"].InputBegan:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 and Alert.IsHovered then
					Alert.IsPressed = true
					SkyUI:AnimateElement(Alert["ab29"], {BackgroundColor3 = Color3.fromRGB(32, 32, 32)})
					SkyUI:AnimateElement(Alert["st31"], {Transparency = 0.85})
					Options.Action.Function()
				end
			end)

			Alert["ab29"].InputEnded:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					Alert.IsPressed = false

					if Alert.IsHovered then
						SkyUI:AnimateElement(Alert["ab29"], {TextTransparency = 0})
						SkyUI:AnimateElement(Alert["st31"], {Transparency = 0.9})
					else
						SkyUI:AnimateElement(Alert["ab29"], {BackgroundColor3 = Color3.fromRGB(29, 29, 29)})
						SkyUI:AnimateElement(Alert["ab29"], {TextTransparency = 0.2})
						SkyUI:AnimateElement(Alert["st31"], {Transparency = 0.96})
					end
				end
			end)
		end
		
		return Alert
	end

	function Interface:AddSection(Options)
		Options = SkyUI:CheckOptions({
			Name = "Section",
			Image = "rbxassetid://10723407389"
		}, Options)

		local Section = {
			IsHovered = false,
			IsActive = false
		} 
		
		-- StarterGui.SkyUI.MainFrame.Sidebar.Items.InactiveSection
		Section["is42"] = Instance.new("TextLabel", Interface["it20"])
		Section["is42"].BorderSizePixel = 0
		Section["is42"].TextXAlignment = Enum.TextXAlignment.Left
		Section["is42"].BackgroundColor3 = Color3.fromRGB(28, 28, 28)
		Section["is42"].TextSize = 16
		Section["is42"].FontFace = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
		Section["is42"].TextColor3 = Color3.fromRGB(255, 255, 255)
		Section["is42"].BackgroundTransparency = 1
		Section["is42"].Size = UDim2.new(1, 0, 0, 35)
		Section["is42"].BorderColor3 = Color3.fromRGB(0, 0, 0)
		Section["is42"].Text = Options.Name
		Section["is42"].TextTransparency = 0.4
		Section["is42"].Name = [[InactiveSection]]

		-- StarterGui.SkyUI.MainFrame.Sidebar.Items.InactiveSection.UIPadding
		Section["p43"] = Instance.new("UIPadding", Section["is42"])
		Section["p43"].PaddingTop = UDim.new(0, 8)
		Section["p43"].PaddingLeft = UDim.new(0, 35)
		Section["p43"].PaddingBottom = UDim.new(0, 8)

		-- StarterGui.SkyUI.MainFrame.Sidebar.Items.InactiveSection.SectionIcon
		Section["si44"] = Instance.new("ImageLabel", Section["is42"])
		Section["si44"].BorderSizePixel = 0
		Section["si44"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Section["si44"].Image = Options.Image
		Section["si44"].ImageTransparency = 0.4
		Section["si44"].Size = UDim2.new(0, 18, 0, 18)
		Section["si44"].BorderColor3 = Color3.fromRGB(0, 0, 0)
		Section["si44"].BackgroundTransparency = 1
		Section["si44"].Name = [[SectionIcon]]
		Section["si44"].Position = UDim2.new(0, -25, 0, 0)

		-- StarterGui.SkyUI.MainFrame.Sidebar.Items.InactiveSection.UIStroke
		Section["st45"] = Instance.new("UIStroke", Section["is42"])
		Section["st45"].Enabled = false
		Section["st45"].Transparency = 0.96
		Section["st45"].ApplyStrokeMode = Enum.ApplyStrokeMode.Border
		Section["st45"].Color = Color3.fromRGB(255, 255, 255)

		-- StarterGui.SkyUI.MainFrame.Sidebar.Items.InactiveSection.UICorner
		Section["c46"] = Instance.new("UICorner", Section["is42"])
		Section["c46"].CornerRadius = UDim.new(0, 5)

		-- StarterGui.SkyUI.MainFrame.Content.SectionContent
		Section["sc47"] = Instance.new("ScrollingFrame", Interface["ct14"])
		Section["sc47"].Active = true
		Section["sc47"].BorderSizePixel = 0
		Section["sc47"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Section["sc47"].Name = Options.Name
		Section["sc47"].ScrollBarImageTransparency = 0.9
		Section["sc47"].AnchorPoint = Vector2.new(0.5, 0.5)
		Section["sc47"].Size = UDim2.new(1, 0, 1, 0)
		Section["sc47"].Position = UDim2.new(0.5, 0, 0.5, 0)
		Section["sc47"].BorderColor3 = Color3.fromRGB(0, 0, 0)
		Section["sc47"].ScrollBarThickness = 4
		Section["sc47"].BackgroundTransparency = 1
		Section["sc47"].Visible = false

		-- StarterGui.SkyUI.MainFrame.Content.SectionContent.UIPadding
		Section["p48"] = Instance.new("UIPadding", Section["sc47"])
		Section["p48"].PaddingTop = UDim.new(0, 10)
		Section["p48"].PaddingRight = UDim.new(0, 12)
		Section["p48"].PaddingLeft = UDim.new(0, 10)
		Section["p48"].PaddingBottom = UDim.new(0, 10)

		-- StarterGui.SkyUI.MainFrame.Content.SectionContent.UIListLayout
		Section["l49"] = Instance.new("UIListLayout", Section["sc47"])
		Section["l49"].Padding = UDim.new(0, 10)
		Section["l49"].SortOrder = Enum.SortOrder.LayoutOrder
		
		function Section:Activate()
			if not Section.IsActive then
				if Interface.CurrentPage ~= nil then
					Interface.CurrentPage:Deactivate()
				end

				Section.IsActive = true
				SkyUI:AnimateElement(Section["is42"], {TextTransparency = 0})
				SkyUI:AnimateElement(Section["si44"], {ImageTransparency = 0})
				SkyUI:AnimateElement(Section["is42"], {BackgroundTransparency = 0})
				SkyUI:AnimateElement(Section["st45"], {Enabled = true})
				Section["sc47"].Visible = true

				Interface.CurrentPage = Section 
			end
		end

		function Section:Deactivate()
			if Section.IsActive then
				Section.IsActive = false
				Section.IsHovered = false
				SkyUI:AnimateElement(Section["is42"], {TextTransparency = 0.4})
				SkyUI:AnimateElement(Section["si44"], {ImageTransparency = 0.4})
				SkyUI:AnimateElement(Section["is42"], {BackgroundTransparency = 1})
				SkyUI:AnimateElement(Section["st45"], {Enabled = false})
				Section["sc47"].Visible = false
			end
		end

		Section["is42"].MouseEnter:Connect(function()
			Section.IsHovered = true

			if not Section.IsActive then
				SkyUI:AnimateElement(Section["is42"], {TextTransparency = 0})
				SkyUI:AnimateElement(Section["si44"], {ImageTransparency = 0})
			end
		end)

		Section["is42"].MouseLeave:Connect(function()
			Section.IsHovered = false

			if not Section.IsActive then
				SkyUI:AnimateElement(Section["is42"], {TextTransparency = 0.4})
				SkyUI:AnimateElement(Section["si44"], {ImageTransparency = 0.4})
			end
		end)

		UserInputService.InputBegan:Connect(function(Input, GPE)
			if GPE then return end

			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				if Section.IsHovered then
					Section:Activate()
				end
			end
		end)

		if Interface.CurrentPage == nil then
			Section:Activate() 
		end
		
		function Section:AddText(Options)
			Options = SkyUI:CheckOptions({
				Text = "Text",
				Style = "Normal"
			}, Options)
			
			local TextElement = {
				IsHovered = false
			}
			
			
			if Options.Style == "Normal" then
				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.TextElement
				TextElement["te50"] = Instance.new("Frame", Section["sc47"]);
				TextElement["te50"]["BorderSizePixel"] = 0;
				TextElement["te50"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
				TextElement["te50"]["Size"] = UDim2.new(1, 0, 0, 35);
				TextElement["te50"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["te50"]["Name"] = [[TextElement]];
				
				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.TextElement.UIStroke
				TextElement["st51"] = Instance.new("UIStroke", TextElement["te50"]);
				TextElement["st51"]["Transparency"] = 0.96;
				TextElement["st51"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
				TextElement["st51"]["Color"] = Color3.fromRGB(255, 255, 255);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.TextElement.UIPadding
				TextElement["p52"] = Instance.new("UIPadding", TextElement["te50"]);
				TextElement["p52"]["PaddingTop"] = UDim.new(0, 8);
				TextElement["p52"]["PaddingLeft"] = UDim.new(0, 12);
				TextElement["p52"]["PaddingBottom"] = UDim.new(0, 8);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.TextElement.UICorner
				TextElement["c53"] = Instance.new("UICorner", TextElement["te50"]);
				TextElement["c53"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.TextElement.TextContent
				TextElement["tc54"] = Instance.new("TextLabel", TextElement["te50"]);
				TextElement["tc54"]["BorderSizePixel"] = 0;
				TextElement["tc54"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				TextElement["tc54"]["TextTransparency"] = 0.2;
				TextElement["tc54"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["tc54"]["TextSize"] = 18;
				TextElement["tc54"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
				TextElement["tc54"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["tc54"]["BackgroundTransparency"] = 1;
				TextElement["tc54"]["Size"] = UDim2.new(0.85, 0, 1, 0);
				TextElement["tc54"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["tc54"]["Name"] = [[TextContent]];
				TextElement["tc54"]["TextYAlignment"] = Enum.TextYAlignment.Top;
				TextElement["tc54"]["TextWrapped"] = true

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.TextElement.TextIcon
				TextElement["ti55"] = Instance.new("ImageLabel", TextElement["te50"]);
				TextElement["ti55"]["BorderSizePixel"] = 0;
				TextElement["ti55"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["ti55"]["ImageTransparency"] = 0.3;
				TextElement["ti55"]["AnchorPoint"] = Vector2.new(1, 0);
				TextElement["ti55"]["Image"] = [[rbxassetid://18824545160]];
				TextElement["ti55"]["Size"] = UDim2.new(0, 22, 0, 22);
				TextElement["ti55"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["ti55"]["BackgroundTransparency"] = 1;
				TextElement["ti55"]["Name"] = [[TextIcon]];
				TextElement["ti55"]["Position"] = UDim2.new(1, -10, 0, -1);
				
				function TextElement:UpdateText(Text)
					Options.Text = Text
					TextElement:_Refresh()
				end
				
				function TextElement:GetText()
					return Options.Text
				end

				function TextElement:_Refresh()
					TextElement["tc54"]["Text"] = Options.Text
					TextElement["tc54"]["Size"] = UDim2.new(TextElement["tc54"]["Size"].X.Scale, TextElement["tc54"]["Size"].X.Offset, 0, math.huge)
					TextElement["tc54"]["Size"] = UDim2.new(TextElement["tc54"]["Size"].X.Scale, TextElement["tc54"]["Size"].X.Offset, 0, TextElement["tc54"]["TextBounds"].Y)
					TextElement["te50"]["Size"] = UDim2.new(TextElement["te50"]["Size"].X.Scale, TextElement["te50"]["Size"].X.Offset, 0, TextElement["tc54"]["TextBounds"].Y + 18)
				end
				
				TextElement["te50"].MouseEnter:Connect(function()
					TextElement.IsHovered = true
					SkyUI:AnimateElement(TextElement["ti55"], {ImageTransparency = 0})
					SkyUI:AnimateElement(TextElement["tc54"], {TextTransparency = 0})
					SkyUI:AnimateElement(TextElement["st51"], {Transparency = 0.9})
				end)

				TextElement["te50"].MouseLeave:Connect(function()
					TextElement.IsHovered = false

					if not TextElement.IsPressed then
						SkyUI:AnimateElement(TextElement["ti55"], {ImageTransparency = 0.3})
						SkyUI:AnimateElement(TextElement["tc54"], {TextTransparency = 0.2})
						SkyUI:AnimateElement(TextElement["st51"], {Transparency = 0.96})
					end
				end)
				
				TextElement:UpdateText(Options.Text)
			elseif Options.Style == "Info" then
				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InfoText
				TextElement["it56"] = Instance.new("Frame", Section["sc47"]);
				TextElement["it56"]["BorderSizePixel"] = 0;
				TextElement["it56"]["BackgroundColor3"] = Color3.fromRGB(10, 20, 25);
				TextElement["it56"]["Size"] = UDim2.new(1, 0, 0, 35);
				TextElement["it56"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["it56"]["Name"] = [[Info]];

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InfoText.UIStroke
				TextElement["st57"] = Instance.new("UIStroke", TextElement["it56"]);
				TextElement["st57"]["Transparency"] = 0.51;
				TextElement["st57"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
				TextElement["st57"]["Color"] = Color3.fromRGB(40, 83, 104);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InfoText.UIPadding
				TextElement["p58"] = Instance.new("UIPadding", TextElement["it56"]);
				TextElement["p58"]["PaddingTop"] = UDim.new(0, 8);
				TextElement["p58"]["PaddingLeft"] = UDim.new(0, 12);
				TextElement["p58"]["PaddingBottom"] = UDim.new(0, 8);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InfoText.UICorner
				TextElement["c59"] = Instance.new("UICorner", TextElement["it56"]);
				TextElement["c59"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InfoText.InfoContent
				TextElement["ic60"] = Instance.new("TextLabel", TextElement["it56"]);
				TextElement["ic60"]["BorderSizePixel"] = 0;
				TextElement["ic60"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				TextElement["ic60"]["TextTransparency"] = 0.2;
				TextElement["ic60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["ic60"]["TextSize"] = 18;
				TextElement["ic60"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
				TextElement["ic60"]["TextColor3"] = Color3.fromRGB(61, 127, 158);
				TextElement["ic60"]["BackgroundTransparency"] = 1;
				TextElement["ic60"]["Size"] = UDim2.new(0.85, 0, 1, 0);
				TextElement["ic60"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["ic60"]["Name"] = [[InfoContent]];
				TextElement["ic60"]["TextYAlignment"] = Enum.TextYAlignment.Top;
				TextElement["ic60"]["TextWrapped"] = true

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InfoText.InfoIcon
				TextElement["ii61"] = Instance.new("ImageLabel", TextElement["it56"]);
				TextElement["ii61"]["BorderSizePixel"] = 0;
				TextElement["ii61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["ii61"]["ImageTransparency"] = 0.2;
				TextElement["ii61"]["ImageColor3"] = Color3.fromRGB(61, 127, 158);
				TextElement["ii61"]["AnchorPoint"] = Vector2.new(1, 0);
				TextElement["ii61"]["Image"] = [[rbxassetid://18824453094]];
				TextElement["ii61"]["Size"] = UDim2.new(0, 25, 0, 25);
				TextElement["ii61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["ii61"]["BackgroundTransparency"] = 1;
				TextElement["ii61"]["Name"] = [[InfoIcon]];
				TextElement["ii61"]["Position"] = UDim2.new(1, -10, 0, -3);
				
				function TextElement:UpdateText(Text)
					Options.Text = Text
					TextElement:_Refresh()
				end
				
				function TextElement:GetText()
					return Options.Text
				end

				function TextElement:_Refresh()
					TextElement["ic60"]["Text"] = Options.Text
					TextElement["ic60"]["Size"] = UDim2.new(TextElement["ic60"]["Size"].X.Scale, TextElement["ic60"]["Size"].X.Offset, 0, math.huge)
					TextElement["ic60"]["Size"] = UDim2.new(TextElement["ic60"]["Size"].X.Scale, TextElement["ic60"]["Size"].X.Offset, 0, TextElement["ic60"]["TextBounds"].Y)
					TextElement["it56"]["Size"] = UDim2.new(TextElement["it56"]["Size"].X.Scale, TextElement["it56"]["Size"].X.Offset, 0, TextElement["ic60"]["TextBounds"].Y + 18)
				end
				
				TextElement["it56"].MouseEnter:Connect(function()
					TextElement.IsHovered = true
					SkyUI:AnimateElement(TextElement["ii61"], {ImageTransparency = 0})
					SkyUI:AnimateElement(TextElement["ic60"], {TextTransparency = 0})
					SkyUI:AnimateElement(TextElement["st57"], {Transparency = 0.4})
				end)

				TextElement["it56"].MouseLeave:Connect(function()
					TextElement.IsHovered = false

					if not TextElement.IsPressed then
						SkyUI:AnimateElement(TextElement["ii61"], {ImageTransparency = 0.3})
						SkyUI:AnimateElement(TextElement["ic60"], {TextTransparency = 0.2})
						SkyUI:AnimateElement(TextElement["st57"], {Transparency = 0.51})
					end
				end)

				TextElement:UpdateText(Options.Text)
			elseif Options.Style == "Warning" then
				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.WarningText
				TextElement["wt62"] = Instance.new("Frame", Section["sc47"]);
				TextElement["wt62"]["BorderSizePixel"] = 0;
				TextElement["wt62"]["BackgroundColor3"] = Color3.fromRGB(32, 31, 12);
				TextElement["wt62"]["Size"] = UDim2.new(1, 0, 0, 35);
				TextElement["wt62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["wt62"]["Name"] = [[Warning]];

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.WarningText.UIStroke
				TextElement["st63"] = Instance.new("UIStroke", TextElement["wt62"]);
				TextElement["st63"]["Transparency"] = 0.51;
				TextElement["st63"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
				TextElement["st63"]["Color"] = Color3.fromRGB(104, 101, 37);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.WarningText.UIPadding
				TextElement["p64"] = Instance.new("UIPadding", TextElement["wt62"]);
				TextElement["p64"]["PaddingTop"] = UDim.new(0, 8);
				TextElement["p64"]["PaddingLeft"] = UDim.new(0, 12);
				TextElement["p64"]["PaddingBottom"] = UDim.new(0, 8);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.WarningText.UICorner
				TextElement["c65"] = Instance.new("UICorner", TextElement["wt62"]);
				TextElement["c65"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.WarningText.WarningContent
				TextElement["wc66"] = Instance.new("TextLabel", TextElement["wt62"]);
				TextElement["wc66"]["BorderSizePixel"] = 0;
				TextElement["wc66"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				TextElement["wc66"]["TextTransparency"] = 0.2;
				TextElement["wc66"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["wc66"]["TextSize"] = 18;
				TextElement["wc66"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
				TextElement["wc66"]["TextColor3"] = Color3.fromRGB(150, 147, 53);
				TextElement["wc66"]["BackgroundTransparency"] = 1;
				TextElement["wc66"]["Size"] = UDim2.new(0.85, 0, 1, 0);
				TextElement["wc66"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["wc66"]["Name"] = [[WarningContent]];
				TextElement["wc66"]["TextYAlignment"] = Enum.TextYAlignment.Top;
				TextElement["wc66"]["TextWrapped"] = true

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.WarningText.WarningIcon
				TextElement["wi67"] = Instance.new("ImageLabel", TextElement["wt62"]);
				TextElement["wi67"]["BorderSizePixel"] = 0;
				TextElement["wi67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["wi67"]["ImageTransparency"] = 0.2;
				TextElement["wi67"]["ImageColor3"] = Color3.fromRGB(150, 147, 53);
				TextElement["wi67"]["AnchorPoint"] = Vector2.new(1, 0);
				TextElement["wi67"]["Image"] = [[rbxassetid://18824479970]];
				TextElement["wi67"]["Size"] = UDim2.new(0, 22, 0, 22);
				TextElement["wi67"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["wi67"]["BackgroundTransparency"] = 1;
				TextElement["wi67"]["Name"] = [[WarningIcon]];
				TextElement["wi67"]["Position"] = UDim2.new(1, -10, 0, -2);
				
				function TextElement:UpdateText(Text)
					Options.Text = Text
					TextElement:_Refresh()
				end
				
				function TextElement:GetText()
					return Options.Text
				end

				function TextElement:_Refresh()
					TextElement["wc66"]["Text"] = Options.Text
					TextElement["wc66"]["Size"] = UDim2.new(TextElement["wc66"]["Size"].X.Scale, TextElement["wc66"]["Size"].X.Offset, 0, math.huge)
					TextElement["wc66"]["Size"] = UDim2.new(TextElement["wc66"]["Size"].X.Scale, TextElement["wc66"]["Size"].X.Offset, 0, TextElement["wc66"]["TextBounds"].Y)
					TextElement["wt62"]["Size"] = UDim2.new(TextElement["wt62"]["Size"].X.Scale, TextElement["wt62"]["Size"].X.Offset, 0, TextElement["wc66"]["TextBounds"].Y + 18)
				end
				
				TextElement["wt62"].MouseEnter:Connect(function()
					TextElement.IsHovered = true
					SkyUI:AnimateElement(TextElement["wi67"], {ImageTransparency = 0})
					SkyUI:AnimateElement(TextElement["wc66"], {TextTransparency = 0})
					SkyUI:AnimateElement(TextElement["st63"], {Transparency = 0.4})
				end)

				TextElement["wt62"].MouseLeave:Connect(function()
					TextElement.IsHovered = false

					if not TextElement.IsPressed then
						SkyUI:AnimateElement(TextElement["wi67"], {ImageTransparency = 0.3})
						SkyUI:AnimateElement(TextElement["wc66"], {TextTransparency = 0.2})
						SkyUI:AnimateElement(TextElement["st63"], {Transparency = 0.51})
					end
				end)

				TextElement:UpdateText(Options.Text)
			elseif Options.Style == "Error" then
				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ErrorText
				TextElement["et68"] = Instance.new("Frame", Section["sc47"]);
				TextElement["et68"]["BorderSizePixel"] = 0;
				TextElement["et68"]["BackgroundColor3"] = Color3.fromRGB(32, 14, 12);
				TextElement["et68"]["Size"] = UDim2.new(1, 0, 0, 35);
				TextElement["et68"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["et68"]["Name"] = [[Error]];

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ErrorText.UIStroke
				TextElement["st69"] = Instance.new("UIStroke", TextElement["et68"]);
				TextElement["st69"]["Transparency"] = 0.51;
				TextElement["st69"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
				TextElement["st69"]["Color"] = Color3.fromRGB(104, 38, 38);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ErrorText.UIPadding
				TextElement["p70"] = Instance.new("UIPadding", TextElement["et68"]);
				TextElement["p70"]["PaddingTop"] = UDim.new(0, 8);
				TextElement["p70"]["PaddingLeft"] = UDim.new(0, 12);
				TextElement["p70"]["PaddingBottom"] = UDim.new(0, 8);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ErrorText.UICorner
				TextElement["c71"] = Instance.new("UICorner", TextElement["et68"]);
				TextElement["c71"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ErrorText.ErrorContent
				TextElement["ec72"] = Instance.new("TextLabel", TextElement["et68"]);
				TextElement["ec72"]["BorderSizePixel"] = 0;
				TextElement["ec72"]["TextXAlignment"] = Enum.TextXAlignment.Left;
				TextElement["ec72"]["TextTransparency"] = 0.2;
				TextElement["ec72"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["ec72"]["TextSize"] = 18;
				TextElement["ec72"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
				TextElement["ec72"]["TextColor3"] = Color3.fromRGB(150, 54, 54);
				TextElement["ec72"]["BackgroundTransparency"] = 1;
				TextElement["ec72"]["Size"] = UDim2.new(0.85, 0, 1, 0);
				TextElement["ec72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["ec72"]["Name"] = [[ErrorContent]];
				TextElement["ec72"]["TextYAlignment"] = Enum.TextYAlignment.Top;
				TextElement["ec72"]["TextWrapped"] = true

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ErrorText.ErrorIcon
				TextElement["ei73"] = Instance.new("ImageLabel", TextElement["et68"]);
				TextElement["ei73"]["BorderSizePixel"] = 0;
				TextElement["ei73"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
				TextElement["ei73"]["ImageTransparency"] = 0.2;
				TextElement["ei73"]["ImageColor3"] = Color3.fromRGB(150, 49, 49);
				TextElement["ei73"]["AnchorPoint"] = Vector2.new(1, 0);
				TextElement["ei73"]["Image"] = [[rbxassetid://18854112224]];
				TextElement["ei73"]["Size"] = UDim2.new(0, 24, 0, 24);
				TextElement["ei73"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				TextElement["ei73"]["BackgroundTransparency"] = 1;
				TextElement["ei73"]["Name"] = [[ErrorIcon]];
				TextElement["ei73"]["Position"] = UDim2.new(1, -10, 0, -2);

				function TextElement:UpdateText(Text)
					Options.Text = Text
					TextElement:_Refresh()
				end

				function TextElement:GetText()
					return Options.Text
				end

				function TextElement:_Refresh()
					TextElement["ec72"]["Text"] = Options.Text
					TextElement["ec72"]["Size"] = UDim2.new(TextElement["ec72"]["Size"].X.Scale, TextElement["ec72"]["Size"].X.Offset, 0, math.huge)
					TextElement["ec72"]["Size"] = UDim2.new(TextElement["ec72"]["Size"].X.Scale, TextElement["ec72"]["Size"].X.Offset, 0, TextElement["ec72"]["TextBounds"].Y)
					TextElement["et68"]["Size"] = UDim2.new(TextElement["et68"]["Size"].X.Scale, TextElement["et68"]["Size"].X.Offset, 0, TextElement["ec72"]["TextBounds"].Y + 18)
				end

				TextElement["et68"].MouseEnter:Connect(function()
					TextElement.IsHovered = true
					SkyUI:AnimateElement(TextElement["ei73"], {ImageTransparency = 0})
					SkyUI:AnimateElement(TextElement["ec72"], {TextTransparency = 0})
					SkyUI:AnimateElement(TextElement["st69"], {Transparency = 0.4})
				end)

				TextElement["et68"].MouseLeave:Connect(function()
					TextElement.IsHovered = false

					if not TextElement.IsPressed then
						SkyUI:AnimateElement(TextElement["ei73"], {ImageTransparency = 0.3})
						SkyUI:AnimateElement(TextElement["ec72"], {TextTransparency = 0.2})
						SkyUI:AnimateElement(TextElement["st69"], {Transparency = 0.51})
					end
				end)

				TextElement:UpdateText(Options.Text)
			end
			
			return TextElement
		end
		
		function Section:AddButton(Options)
			Options = SkyUI:CheckOptions({
				Name = "Button",
				Function = function()
					print("Button was clicked!")
				end,
			}, Options)
			
			local ButtonElement = {
				IsHovered = false,
				IsPressed = false
			}
			
			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ButtonElement
			ButtonElement["be74"] = Instance.new("Frame", Section["sc47"]);
			ButtonElement["be74"]["BorderSizePixel"] = 0;
			ButtonElement["be74"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
			ButtonElement["be74"]["Size"] = UDim2.new(1, 0, 0, 45);
			ButtonElement["be74"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ButtonElement["be74"]["Name"] = [[ButtonElement]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ButtonElement.UIStroke
			ButtonElement["st75"] = Instance.new("UIStroke", ButtonElement["be74"]);
			ButtonElement["st75"]["Transparency"] = 0.96;
			ButtonElement["st75"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
			ButtonElement["st75"]["Color"] = Color3.fromRGB(255, 255, 255);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ButtonElement.UIPadding
			ButtonElement["p76"] = Instance.new("UIPadding", ButtonElement["be74"]);
			ButtonElement["p76"]["PaddingTop"] = UDim.new(0, 8);
			ButtonElement["p76"]["PaddingLeft"] =  UDim.new(0, 12);
			ButtonElement["p76"]["PaddingBottom"] = UDim.new(0, 8);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ButtonElement.UICorner
			ButtonElement["c77"] = Instance.new("UICorner", ButtonElement["be74"]);
			ButtonElement["c77"]["CornerRadius"] = UDim.new(0, 5);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ButtonElement.ButtonIcon
			ButtonElement["bi78"] = Instance.new("ImageLabel", ButtonElement["be74"]);
			ButtonElement["bi78"]["BorderSizePixel"] = 0;
			ButtonElement["bi78"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			ButtonElement["bi78"]["ImageTransparency"] = 0.3;
			ButtonElement["bi78"]["AnchorPoint"] = Vector2.new(1, 0);
			ButtonElement["bi78"]["Image"] = [[rbxassetid://18824415379]];
			ButtonElement["bi78"]["Size"] = UDim2.new(0, 25, 0, 25);
			ButtonElement["bi78"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ButtonElement["bi78"]["BackgroundTransparency"] = 1;
			ButtonElement["bi78"]["Name"] = [[ButtonIcon]];
			ButtonElement["bi78"]["Position"] = UDim2.new(1, -8, 0, 2);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ButtonElement.ButtonName
			ButtonElement["bn79"] = Instance.new("TextLabel", ButtonElement["be74"]);
			ButtonElement["bn79"]["BorderSizePixel"] = 0;
			ButtonElement["bn79"]["TextXAlignment"] = Enum.TextXAlignment.Left;
			ButtonElement["bn79"]["TextTransparency"] = 0.2;
			ButtonElement["bn79"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			ButtonElement["bn79"]["TextSize"] = 18;
			ButtonElement["bn79"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
			ButtonElement["bn79"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			ButtonElement["bn79"]["BackgroundTransparency"] = 1;
			ButtonElement["bn79"]["Size"] = UDim2.new(0.85, 0, 1, 0);
			ButtonElement["bn79"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ButtonElement["bn79"]["Text"] = Options.Name;
			ButtonElement["bn79"]["Name"] = [[ButtonName]];
			
			function ButtonElement:SetName(Name)
				ButtonElement["bn79"]["Text"] = Name
			end

			function ButtonElement:SetFunction(Func)
				Options.Function = Func
			end
			
			ButtonElement["be74"].MouseEnter:Connect(function()
				ButtonElement.IsHovered = true
				SkyUI:AnimateElement(ButtonElement["bi78"], {ImageTransparency = 0})
				SkyUI:AnimateElement(ButtonElement["bn79"], {TextTransparency = 0})
				SkyUI:AnimateElement(ButtonElement["st75"], {Transparency = 0.9})
			end)
			
			ButtonElement["be74"].MouseLeave:Connect(function()
				ButtonElement.IsHovered = false

				if not ButtonElement.IsPressed then
					SkyUI:AnimateElement(ButtonElement["bi78"], {ImageTransparency = 0.3})
					SkyUI:AnimateElement(ButtonElement["bn79"], {TextTransparency = 0.2})
					SkyUI:AnimateElement(ButtonElement["st75"], {Transparency = 0.96})
				end
			end)
			
			ButtonElement["be74"].InputBegan:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 and ButtonElement.IsHovered then
					ButtonElement.IsPressed = true
					SkyUI:AnimateElement(ButtonElement["be74"], {BackgroundColor3 = Color3.fromRGB(28, 28, 28)})
					SkyUI:AnimateElement(ButtonElement["st75"], {Transparency = 0.9})
					Options.Function()
				end
			end)

			ButtonElement["be74"].InputEnded:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					ButtonElement.IsPressed = false
					
					if ButtonElement.IsHovered then
						SkyUI:AnimateElement(ButtonElement["be74"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(ButtonElement["bi78"], {ImageTransparency = 0})
						SkyUI:AnimateElement(ButtonElement["bn79"], {TextTransparency = 0})
						SkyUI:AnimateElement(ButtonElement["st75"], {Transparency = 0.9})
					else
						SkyUI:AnimateElement(ButtonElement["be74"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(ButtonElement["st75"], {Transparency = 0.96})
					end
				end
			end)
			
			return ButtonElement  
		end
		
		function Section:AddSlider(Options)
			Options = SkyUI:CheckOptions({
				Name = "Slider",
				Minimum = 0,
				Maximum = 10,
				Start = 5,
				Precision = 0,
				Function = function(Value) print("The Value is "..Value.."!") end
			}, Options)
			
			local SliderElement = {
				IsHovered = false,
				IsPressed = false,
				Connection = nil
			}
			
			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement
			SliderElement["se80"] = Instance.new("Frame", Section["sc47"]);
			SliderElement["se80"]["BorderSizePixel"] = 0;
			SliderElement["se80"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
			SliderElement["se80"]["Size"] = UDim2.new(1, 0, 0, 50);
			SliderElement["se80"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			SliderElement["se80"]["Name"] = [[SliderElement]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.UIStroke
			SliderElement["st81"] = Instance.new("UIStroke", SliderElement["se80"]);
			SliderElement["st81"]["Transparency"] = 0.96;
			SliderElement["st81"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
			SliderElement["st81"]["Color"] = Color3.fromRGB(255, 255, 255);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.UIPadding
			SliderElement["p82"] = Instance.new("UIPadding", SliderElement["se80"]);
			SliderElement["p82"]["PaddingTop"] = UDim.new(0, 8);
			SliderElement["p82"]["PaddingRight"] = UDim.new(0, 12);
			SliderElement["p82"]["PaddingLeft"] = UDim.new(0, 12);
			SliderElement["p82"]["PaddingBottom"] = UDim.new(0, 8);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.UICorner
			SliderElement["c83"] = Instance.new("UICorner", SliderElement["se80"]);
			SliderElement["c83"]["CornerRadius"] = UDim.new(0, 5);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.SliderName
			SliderElement["sn84"] = Instance.new("TextLabel", SliderElement["se80"]);
			SliderElement["sn84"]["BorderSizePixel"] = 0;
			SliderElement["sn84"]["TextXAlignment"] = Enum.TextXAlignment.Left;
			SliderElement["sn84"]["TextTransparency"] = 0.2;
			SliderElement["sn84"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			SliderElement["sn84"]["TextSize"] = 18;
			SliderElement["sn84"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
			SliderElement["sn84"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			SliderElement["sn84"]["BackgroundTransparency"] = 1;
			SliderElement["sn84"]["Size"] = UDim2.new(0.85, -10, 1, -10);
			SliderElement["sn84"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			SliderElement["sn84"]["Text"] = Options.Name;
			SliderElement["sn84"]["Name"] = [[SliderName]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.SliderValue
			SliderElement["sv85"] = Instance.new("TextLabel", SliderElement["se80"]);
			SliderElement["sv85"]["BorderSizePixel"] = 0;
			SliderElement["sv85"]["TextXAlignment"] = Enum.TextXAlignment.Right;
			SliderElement["sv85"]["TextTransparency"] = 0.2;
			SliderElement["sv85"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			SliderElement["sv85"]["TextSize"] = 18;
			SliderElement["sv85"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
			SliderElement["sv85"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			SliderElement["sv85"]["BackgroundTransparency"] = 1;
			SliderElement["sv85"]["AnchorPoint"] = Vector2.new(1, 0);
			SliderElement["sv85"]["Size"] = UDim2.new(0, 80, 1, -10);
			SliderElement["sv85"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			SliderElement["sv85"]["Text"] = tostring(Options.Start);
			SliderElement["sv85"]["Name"] = [[SliderValue]];
			SliderElement["sv85"]["Position"] = UDim2.new(1, 0, 0, 0);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.SliderBackground
			SliderElement["sb86"] = Instance.new("Frame", SliderElement["se80"]);
			SliderElement["sb86"]["BorderSizePixel"] = 0;
			SliderElement["sb86"]["BackgroundColor3"] = Color3.fromRGB(23, 23, 23);
			SliderElement["sb86"]["AnchorPoint"] = Vector2.new(0, 1);
			SliderElement["sb86"]["Size"] = UDim2.new(1, 0, 0, 6);
			SliderElement["sb86"]["Position"] = UDim2.new(0, 0, 1, 0);
			SliderElement["sb86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			SliderElement["sb86"]["Name"] = [[SliderBackground]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.SliderBackground.UICorner
			SliderElement["c87"] = Instance.new("UICorner", SliderElement["sb86"]);
			SliderElement["c87"]["CornerRadius"] = UDim.new(1, 0);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.SliderBackground.UIStroke
			SliderElement["st88"] = Instance.new("UIStroke", SliderElement["sb86"]);
			SliderElement["st88"]["Transparency"] = 0.97;
			SliderElement["st88"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
			SliderElement["st88"]["Color"] = Color3.fromRGB(255, 255, 255);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.SliderBackground.SliderFill
			SliderElement["sf89"] = Instance.new("Frame", SliderElement["sb86"]);
			SliderElement["sf89"]["BorderSizePixel"] = 0;
			SliderElement["sf89"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			SliderElement["sf89"]["Size"] = UDim2.new(0.5, 0, 1, 0);
			SliderElement["sf89"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			SliderElement["sf89"]["Name"] = [[SliderFill]];
			SliderElement["sf89"]["BackgroundTransparency"] = 0.8;

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.SliderElement.SliderBackground.SliderFill.UICorner
			SliderElement["c90"] = Instance.new("UICorner", SliderElement["sf89"]);
			SliderElement["c90"]["CornerRadius"] = UDim.new(1, 0);
			
			function SliderElement:SetValue(Provided)
				if Provided == nil then
					local Percent = math.clamp((Mouse.X - SliderElement["se80"].AbsolutePosition.X) / (SliderElement["se80"].AbsoluteSize.X), 0, 1)
					local Value = math.floor((Options.Maximum - Options.Minimum) * Percent * (10 ^ Options.Precision) + 0.5) / (10 ^ Options.Precision) + Options.Minimum

					if Percent > 1 then
						Percent = 1
					end

					SliderElement["sv85"].Text = tostring(Value)
					SliderElement["sf89"].Size = UDim2.new(Percent, 0, 1, 0);
				else
					local Percent = (Provided - Options.Minimum) / (Options.Maximum - Options.Minimum)
					local Value = math.floor(Provided * (10 ^ Options.Precision) + 0.5) / (10 ^ Options.Precision)
						
					if Percent > 1 then
						Percent = 1
					end
					
					SliderElement["sv85"].Text = tostring(Value)
					SliderElement["sf89"].Size = UDim2.new(Percent, 0, 1, 0)
				end

				Options.Function(SliderElement:GetValue())
			end
			
			function SliderElement:SetName(Name)
				SliderElement["sn84"]["Name"] = Name
			end
			
			function SliderElement:SetFunction(Func)
				Options.Function = Func
			end
			
			function SliderElement:GetValue()
				return tostring(SliderElement["sv85"].Text)
			end
			
			SliderElement:SetValue(Options.Start)
			
			SliderElement["se80"].MouseEnter:Connect(function()
				SliderElement.IsHovered = true
				SkyUI:AnimateElement(SliderElement["sn84"], {TextTransparency = 0})
				SkyUI:AnimateElement(SliderElement["sv85"], {TextTransparency = 0})
				SkyUI:AnimateElement(SliderElement["st81"], {Transparency = 0.9})
			end)

			SliderElement["se80"].MouseLeave:Connect(function()
				SliderElement.IsHovered = false

				if not SliderElement.IsPressed then
					SkyUI:AnimateElement(SliderElement["sn84"], {TextTransparency = 0.2})
					SkyUI:AnimateElement(SliderElement["sv85"], {TextTransparency = 0.2})
					SkyUI:AnimateElement(SliderElement["st81"], {Transparency = 0.96})
				end
			end)

			SliderElement["se80"].InputBegan:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 and SliderElement.IsHovered then
					SliderElement.IsPressed = true
					SkyUI:AnimateElement(SliderElement["se80"], {BackgroundColor3 = Color3.fromRGB(28, 28, 28)})
					SkyUI:AnimateElement(SliderElement["st81"], {Transparency = 0.9})
					
					if not SliderElement.Connection then
						SliderElement.Connection = RunService.RenderStepped:Connect(function()
							SliderElement:SetValue()
						end)
					end
				end
			end)

			SliderElement["se80"].InputEnded:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					SliderElement.IsPressed = false

					if SliderElement.IsHovered then
						SkyUI:AnimateElement(SliderElement["se80"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(SliderElement["sn84"], {TextTransparency = 0})
						SkyUI:AnimateElement(SliderElement["sv85"], {TextTransparency = 0})
						SkyUI:AnimateElement(SliderElement["st81"], {Transparency = 0.9})
					else
						SkyUI:AnimateElement(SliderElement["se80"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(SliderElement["st81"], {Transparency = 0.96})
					end

					if SliderElement.Connection then
						SliderElement.Connection:Disconnect()
						SliderElement.Connection = nil
					end
				end
			end)
			
			return SliderElement
		end
		
		function Section:AddToggle(Options)
			Options = SkyUI:CheckOptions({
				Name = "Toggle",
				Start = false,
				Function = function(Value) print("The Value is "..Value.."!") end
			}, Options)
			
			local ToggleElement = {
				IsHovered = false,
				IsPressed = false,
				State = false
			}
			
			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement
			ToggleElement["te91"] = Instance.new("Frame", Section["sc47"]);
			ToggleElement["te91"]["BorderSizePixel"] = 0;
			ToggleElement["te91"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
			ToggleElement["te91"]["Size"] = UDim2.new(1, 0, 0, 45);
			ToggleElement["te91"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ToggleElement["te91"]["Name"] = [[ToggleElement]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement.UIStroke
			ToggleElement["st92"] = Instance.new("UIStroke", ToggleElement["te91"]);
			ToggleElement["st92"]["Transparency"] = 0.96;
			ToggleElement["st92"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
			ToggleElement["st92"]["Color"] = Color3.fromRGB(255, 255, 255);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement.UIPadding
			ToggleElement["p93"] = Instance.new("UIPadding", ToggleElement["te91"]);
			ToggleElement["p93"]["PaddingTop"] = UDim.new(0, 8);
			ToggleElement["p93"]["PaddingLeft"] = UDim.new(0, 12);
			ToggleElement["p93"]["PaddingBottom"] = UDim.new(0, 8);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement.UICorner
			ToggleElement["c94"] = Instance.new("UICorner", ToggleElement["te91"]);
			ToggleElement["c94"]["CornerRadius"] = UDim.new(0, 5);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement.ToggleName
			ToggleElement["tn95"] = Instance.new("TextLabel", ToggleElement["te91"]);
			ToggleElement["tn95"]["BorderSizePixel"] = 0;
			ToggleElement["tn95"]["TextXAlignment"] = Enum.TextXAlignment.Left;
			ToggleElement["tn95"]["TextTransparency"] = 0.2;
			ToggleElement["tn95"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			ToggleElement["tn95"]["TextSize"] = 18;
			ToggleElement["tn95"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
			ToggleElement["tn95"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			ToggleElement["tn95"]["BackgroundTransparency"] = 1;
			ToggleElement["tn95"]["Size"] = UDim2.new(0.8, 0, 1, 0);
			ToggleElement["tn95"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ToggleElement["tn95"]["Text"] = Options.Name;
			ToggleElement["tn95"]["Name"] = [[ToggleName]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement.ToggleBox
			ToggleElement["tb96"] = Instance.new("Frame", ToggleElement["te91"]);
			ToggleElement["tb96"]["BorderSizePixel"] = 0;
			ToggleElement["tb96"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
			ToggleElement["tb96"]["AnchorPoint"] = Vector2.new(1, 0);
			ToggleElement["tb96"]["Size"] = UDim2.new(0, 25, 0, 25);
			ToggleElement["tb96"]["Position"] = UDim2.new(1, -8, 0, 2);
			ToggleElement["tb96"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ToggleElement["tb96"]["Name"] = [[ToggleBox]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement.ToggleBox.UICorner
			ToggleElement["c97"] = Instance.new("UICorner", ToggleElement["tb96"]);
			ToggleElement["c97"]["CornerRadius"] = UDim.new(0, 5);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement.ToggleBox.UIStroke
			ToggleElement["st98"] = Instance.new("UIStroke", ToggleElement["tb96"]);
			ToggleElement["st98"]["Transparency"] = 0.94;
			ToggleElement["st98"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
			ToggleElement["st98"]["Color"] = Color3.fromRGB(255, 255, 255);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.ToggleElement.ToggleBox.ToggleMark
			ToggleElement["tm99"] = Instance.new("ImageLabel", ToggleElement["tb96"]);
			ToggleElement["tm99"]["BorderSizePixel"] = 0;
			ToggleElement["tm99"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			ToggleElement["tm99"]["ImageTransparency"] = 1;
			ToggleElement["tm99"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
			ToggleElement["tm99"]["Image"] = [[rbxassetid://18837414354]];
			ToggleElement["tm99"]["Size"] = UDim2.new(1, -5, 1, -5);
			ToggleElement["tm99"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			ToggleElement["tm99"]["BackgroundTransparency"] = 1;
			ToggleElement["tm99"]["Name"] = [[ToggleMark]];
			ToggleElement["tm99"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
			
			function ToggleElement:SetName(Name)
				ToggleElement["tn95"]["Text"] = Name
			end
			
			function ToggleElement:SetFunction(Func)
				Options.Function = Func
			end
			
			function ToggleElement:SetState(State)
				ToggleElement.State = State
				
				if State == true then
					SkyUI:AnimateElement(ToggleElement["tb96"], {BackgroundColor3 = Color3.fromRGB(0, 154, 255)})
					SkyUI:AnimateElement(ToggleElement["tm99"], {ImageTransparency = 0})
				else
					SkyUI:AnimateElement(ToggleElement["tb96"], {BackgroundColor3 = Color3.fromRGB(31, 31, 31)})
					SkyUI:AnimateElement(ToggleElement["tm99"], {ImageTransparency = 1})
				end
			end
			
			ToggleElement:SetState(Options.Start)
			
			ToggleElement["te91"].MouseEnter:Connect(function()
				ToggleElement.IsHovered = true
				SkyUI:AnimateElement(ToggleElement["tn95"], {TextTransparency = 0})
				SkyUI:AnimateElement(ToggleElement["st92"], {Transparency = 0.9})
			end)

			ToggleElement["te91"].MouseLeave:Connect(function()
				ToggleElement.IsHovered = false

				if not ToggleElement.IsPressed then
					SkyUI:AnimateElement(ToggleElement["tn95"], {TextTransparency = 0.2})
					SkyUI:AnimateElement(ToggleElement["st92"], {Transparency = 0.96})
				end
			end)

			ToggleElement["te91"].InputBegan:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 and ToggleElement.IsHovered then
					ToggleElement.IsPressed = true
					
					if ToggleElement.State then
						ToggleElement:SetState(false)
					else
						ToggleElement:SetState(true)
					end
					
					SkyUI:AnimateElement(ToggleElement["te91"], {BackgroundColor3 = Color3.fromRGB(28, 28, 28)})
					SkyUI:AnimateElement(ToggleElement["st92"], {Transparency = 0.9})
					Options.Function(ToggleElement.State)
				end
			end)

			ToggleElement["te91"].InputEnded:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					ToggleElement.IsPressed = false

					if ToggleElement.IsHovered then
						SkyUI:AnimateElement(ToggleElement["te91"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(ToggleElement["tn95"], {TextTransparency = 0})
						SkyUI:AnimateElement(ToggleElement["st92"], {Transparency = 0.9})
					else
						SkyUI:AnimateElement(ToggleElement["te91"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(ToggleElement["st92"], {Transparency = 0.96})
					end
				end
			end)
			
			return ToggleElement
		end
		
		function Section:AddDropdown(Options)
			Options = SkyUI:CheckOptions({
				Name = "Dropdown",
				Choices = {"Choice 1", "Choice 2"},
				Start = false,
				Function = function(Value) print("The Value is "..Value.."!") end
			}, Options)
			
			local DropdownElement = {
				IsHovered = false,
				IsPressed = false,
				IsOpen = false,
				SelectedChoice = nil,
				Choices = {},
			}
			
			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement
			DropdownElement["de100"] = Instance.new("Frame", Section["sc47"]);
			DropdownElement["de100"]["BorderSizePixel"] = 0;
			DropdownElement["de100"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
			DropdownElement["de100"]["ClipsDescendants"] = true;
			DropdownElement["de100"]["Size"] = UDim2.new(1, 0, 0, 45);
			DropdownElement["de100"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			DropdownElement["de100"]["Name"] = [[DropdownElement]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.UIStroke
			DropdownElement["st101"] = Instance.new("UIStroke", DropdownElement["de100"]);
			DropdownElement["st101"]["Transparency"] = 0.96;
			DropdownElement["st101"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
			DropdownElement["st101"]["Color"] = Color3.fromRGB(255, 255, 255);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.UIPadding
			DropdownElement["p102"] = Instance.new("UIPadding", DropdownElement["de100"]);
			DropdownElement["p102"]["PaddingTop"] = UDim.new(0, 8);
			DropdownElement["p102"]["PaddingLeft"] = UDim.new(0, 12);
			DropdownElement["p102"]["PaddingBottom"] = UDim.new(0, 8);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.UICorner
			DropdownElement["c103"] = Instance.new("UICorner", DropdownElement["de100"]);
			DropdownElement["c103"]["CornerRadius"] = UDim.new(0, 5);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.DropdownIcon
			DropdownElement["di104"] = Instance.new("ImageLabel", DropdownElement["de100"]);
			DropdownElement["di104"]["BorderSizePixel"] = 0;
			DropdownElement["di104"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			DropdownElement["di104"]["ImageTransparency"] = 0.3;
			DropdownElement["di104"]["AnchorPoint"] = Vector2.new(1, 0);
			DropdownElement["di104"]["Image"] = [[rbxassetid://18824644623]];
			DropdownElement["di104"]["Size"] = UDim2.new(0, 25, 0, 25);
			DropdownElement["di104"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			DropdownElement["di104"]["BackgroundTransparency"] = 1;
			DropdownElement["di104"]["Name"] = [[DropdownIcon]];
			DropdownElement["di104"]["Position"] = UDim2.new(1, -8, 0, 2);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.DropdownName
			DropdownElement["dn105"] = Instance.new("TextLabel", DropdownElement["de100"]);
			DropdownElement["dn105"]["BorderSizePixel"] = 0;
			DropdownElement["dn105"]["TextXAlignment"] = Enum.TextXAlignment.Left;
			DropdownElement["dn105"]["TextTransparency"] = 0.2;
			DropdownElement["dn105"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			DropdownElement["dn105"]["TextSize"] = 18;
			DropdownElement["dn105"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
			DropdownElement["dn105"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			DropdownElement["dn105"]["BackgroundTransparency"] = 1;
			DropdownElement["dn105"]["Size"] = UDim2.new(0.85, 0, 0, 29);
			DropdownElement["dn105"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			DropdownElement["dn105"]["Text"] = Options.Name;
			DropdownElement["dn105"]["Name"] = [[DropdownName]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.DropdownChoices
			DropdownElement["dc106"] = Instance.new("Frame", DropdownElement["de100"]);
			DropdownElement["dc106"]["Visible"] = false;
			DropdownElement["dc106"]["BorderSizePixel"] = 0;
			DropdownElement["dc106"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			DropdownElement["dc106"]["Size"] = UDim2.new(1, -12, 1, -36);
			DropdownElement["dc106"]["Position"] = UDim2.new(0, 0, 0, 32);
			DropdownElement["dc106"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			DropdownElement["dc106"]["Name"] = [[DropdownChoices]];
			DropdownElement["dc106"]["BackgroundTransparency"] = 1;
			
			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.DropdownChoices.UIPadding
			DropdownElement["p107"] = Instance.new("UIPadding", DropdownElement["dc106"]);
			DropdownElement["p107"]["PaddingTop"] = UDim.new(0, 2);
			DropdownElement["p107"]["PaddingLeft"] = UDim.new(0, 2);
			DropdownElement["p107"]["PaddingRight"] = UDim.new(0, -8);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.DropdownChoices.UIListLayout
			DropdownElement["l108"] = Instance.new("UIListLayout", DropdownElement["dc106"]);
			DropdownElement["l108"]["Padding"] = UDim.new(0, 5);
			DropdownElement["l108"]["SortOrder"] = Enum.SortOrder.LayoutOrder;
			
			function DropdownElement:AddChoice(Value)
				local ChoiceID = HTTPService:GenerateGUID(false)
				
				if DropdownElement.Choices[ChoiceID] ~= nil then
					return
				end
				
				DropdownElement.Choices[ChoiceID] = {
					Element = {},
					Value = Value
				}
				
				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.DropdownChoices.ChoiceItem
				DropdownElement.Choices[ChoiceID].Element["ci109"] = Instance.new("TextLabel", DropdownElement["dc106"]);
				DropdownElement.Choices[ChoiceID].Element["ci109"]["BorderSizePixel"] = 0;
				DropdownElement.Choices[ChoiceID].Element["ci109"]["TextTransparency"] = 0.24;
				DropdownElement.Choices[ChoiceID].Element["ci109"]["BackgroundColor3"] = Color3.fromRGB(27, 27, 27);
				DropdownElement.Choices[ChoiceID].Element["ci109"]["TextSize"] = 14;
				DropdownElement.Choices[ChoiceID].Element["ci109"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
				DropdownElement.Choices[ChoiceID].Element["ci109"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
				DropdownElement.Choices[ChoiceID].Element["ci109"]["Size"] = UDim2.new(1, -10, 0, 20);
				DropdownElement.Choices[ChoiceID].Element["ci109"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
				DropdownElement.Choices[ChoiceID].Element["ci109"]["Text"] = Value;
				DropdownElement.Choices[ChoiceID].Element["ci109"]["Name"] = [[ChoiceItem]];

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.DropdownChoices.ChoiceItem.UICorner
				DropdownElement.Choices[ChoiceID].Element["c110"] = Instance.new("UICorner", DropdownElement.Choices[ChoiceID].Element["ci109"]);
				DropdownElement.Choices[ChoiceID].Element["c110"]["CornerRadius"] = UDim.new(0, 5);

				-- StarterGui.SkyUI.MainFrame.Content.SectionContent.DropdownElement.DropdownChoices.ChoiceItem.UIStroke
				DropdownElement.Choices[ChoiceID].Element["st111"] = Instance.new("UIStroke", DropdownElement.Choices[ChoiceID].Element["ci109"]);
				DropdownElement.Choices[ChoiceID].Element["st111"]["Enabled"] = false;
				DropdownElement.Choices[ChoiceID].Element["st111"]["Transparency"] = 0.96;
				DropdownElement.Choices[ChoiceID].Element["st111"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
				DropdownElement.Choices[ChoiceID].Element["st111"]["Color"] = Color3.fromRGB(255, 255, 255);
				
				if Options.Start ~= false and Options.Start == Value then
					DropdownElement.SelectedChoice = ChoiceID
					DropdownElement["dn105"]["Text"] = Options.Name.." ("..Value..")"
					DropdownElement.Choices[ChoiceID].Element["ci109"]["TextTransparency"] = 0.2;
					DropdownElement.Choices[ChoiceID].Element["ci109"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
					DropdownElement.Choices[ChoiceID].Element["st111"]["Enabled"] = true
				end
				
				DropdownElement.Choices[ChoiceID].Element["ci109"].MouseEnter:Connect(function()
					DropdownElement.IsHovered = true
					SkyUI:AnimateElement(DropdownElement.Choices[ChoiceID].Element["ci109"], {TextTransparency = 0.2})
				end)

				DropdownElement.Choices[ChoiceID].Element["ci109"].MouseLeave:Connect(function()
					DropdownElement.IsHovered = false

					if not DropdownElement.IsPressed then
						SkyUI:AnimateElement(DropdownElement.Choices[ChoiceID].Element["ci109"], {TextTransparency = 0.24})
					end
				end)

				DropdownElement.Choices[ChoiceID].Element["ci109"].InputBegan:Connect(function(Input, GPE)
					if GPE then return end

					if Input.UserInputType == Enum.UserInputType.MouseButton1 and DropdownElement.IsHovered then
						DropdownElement.IsPressed = true
						
						if DropdownElement.SelectedChoice ~= nil then
							DropdownElement.Choices[DropdownElement.SelectedChoice].Element["ci109"]["TextTransparency"] = 0.24;
							DropdownElement.Choices[DropdownElement.SelectedChoice].Element["ci109"]["BackgroundColor3"] = Color3.fromRGB(27, 27, 27);
							DropdownElement.Choices[DropdownElement.SelectedChoice].Element["st111"]["Enabled"] = false
						end
						
						DropdownElement.SelectedChoice = ChoiceID
						DropdownElement.Choices[ChoiceID].Element["ci109"]["TextTransparency"] = 0.2;
						DropdownElement.Choices[ChoiceID].Element["ci109"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
						DropdownElement.Choices[ChoiceID].Element["st111"]["Enabled"] = true
						DropdownElement["dn105"]["Text"] = Options.Name.." ("..Value..")"
						DropdownElement:_ToggleDropdown()
						Options.Function(Value)
					end
				end)

				DropdownElement.Choices[ChoiceID].Element["ci109"].InputEnded:Connect(function(Input, GPE)
					if GPE then return end

					if Input.UserInputType == Enum.UserInputType.MouseButton1 then
						DropdownElement.IsPressed = false
						DropdownElement:_ToggleDropdown()
						
						if DropdownElement.IsHovered then
							SkyUI:AnimateElement(DropdownElement.Choices[ChoiceID].Element["ci109"], {TextTransparency = 0.2})
						else
							SkyUI:AnimateElement(DropdownElement.Choices[ChoiceID].Element["ci109"], {TextTransparency = 0.24})
						end
					end
				end)
			end
			
			function DropdownElement:RemoveChoice(Value)
				local ChoiceID = nil
				local ChoiceData = nil
				
				for Index, Choice in pairs(DropdownElement.Choices) do
					if Choice.Value == Value then
						ChoiceID = Index
						ChoiceData = Choice
						break
					end
				end

				if ChoiceID and ChoiceData then
					ChoiceData.Element["ci109"]:Destroy()
					DropdownElement.Choices[ChoiceID] = nil
				end
			end
			
			function DropdownElement:ClearChoices(Choices)
				for Index, Choice in pairs(DropdownElement.Choices) do
					DropdownElement:RemoveChoice(Choice.Value)
				end
			end
			
			function DropdownElement:SetName(Name)
				DropdownElement["dn105"]["Text"] = Name
			end
			
			function DropdownElement:SetFunction(Func)
				Options.Function = Func
			end
			
			function DropdownElement:_ToggleDropdown()
				if DropdownElement.IsOpen then
					DropdownElement.IsOpen = false
					DropdownElement["dc106"].Visible = false
					SkyUI:AnimateElement(DropdownElement["de100"], {Size = UDim2.new(1, 0, 0, 45)})
				else
					DropdownElement.IsOpen = true
					local ChoiceCount = 0
					
					for Index, Choice in pairs(DropdownElement.Choices) do
						if Choice ~= nil then
							ChoiceCount += 1
						end
					end
					
					if ChoiceCount == 0 then
						return
					end
					
					DropdownElement["dc106"].Visible = true
					SkyUI:AnimateElement(DropdownElement["de100"], {Size = UDim2.new(1, 0, 0, (45 + (20 * ChoiceCount) + 14))})
				end
			end
			
			for _, Value in pairs(Options.Choices) do
				DropdownElement:AddChoice(Value)
			end
			
			DropdownElement["de100"].MouseEnter:Connect(function()
				DropdownElement.IsHovered = true
				SkyUI:AnimateElement(DropdownElement["di104"], {ImageTransparency = 0})
				SkyUI:AnimateElement(DropdownElement["dn105"], {TextTransparency = 0})
				SkyUI:AnimateElement(DropdownElement["st101"], {Transparency = 0.9})
			end)

			DropdownElement["de100"].MouseLeave:Connect(function()
				DropdownElement.IsHovered = false

				if not DropdownElement.IsPressed then
					SkyUI:AnimateElement(DropdownElement["di104"], {ImageTransparency = 0.3})
					SkyUI:AnimateElement(DropdownElement["dn105"], {TextTransparency = 0.2})
					SkyUI:AnimateElement(DropdownElement["st101"], {Transparency = 0.96})
				end
			end)

			DropdownElement["de100"].InputBegan:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 and DropdownElement.IsHovered then
					DropdownElement.IsPressed = true
					SkyUI:AnimateElement(DropdownElement["de100"], {BackgroundColor3 = Color3.fromRGB(28, 28, 28)})
					SkyUI:AnimateElement(DropdownElement["st101"], {Transparency = 0.9})
					DropdownElement:_ToggleDropdown()
				end
			end)

			DropdownElement["de100"].InputEnded:Connect(function(Input, GPE)
				if GPE then return end

				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					DropdownElement.IsPressed = false

					if DropdownElement.IsHovered then
						SkyUI:AnimateElement(DropdownElement["de100"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(DropdownElement["di104"], {ImageTransparency = 0})
						SkyUI:AnimateElement(DropdownElement["dn105"], {TextTransparency = 0})
						SkyUI:AnimateElement(DropdownElement["st101"], {Transparency = 0.9})
					else
						SkyUI:AnimateElement(DropdownElement["de100"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(DropdownElement["st101"], {Transparency = 0.96})
					end
				end
			end)
			
			return DropdownElement
		end
		
		function Section:AddInput(Options)
			Options = SkyUI:CheckOptions({
				Name = "Input",
				Start = false,
				Function = function(Value)
					print("The Value is "..Value.."!")
				end,
			}, Options)
			
			local InputElement = {
				IsHovered = false,
				IsPressed = false,
				TextContent = nil
			}
			
			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InputElement
			InputElement["ie112"] = Instance.new("Frame", Section["sc47"]);
			InputElement["ie112"]["BorderSizePixel"] = 0;
			InputElement["ie112"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
			InputElement["ie112"]["Size"] = UDim2.new(1, 0, 0, 45);
			InputElement["ie112"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			InputElement["ie112"]["Name"] = [[InputElement]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InputElement.UIStroke
			InputElement["st113"] = Instance.new("UIStroke", InputElement["ie112"]);
			InputElement["st113"]["Transparency"] = 0.96;
			InputElement["st113"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
			InputElement["st113"]["Color"] = Color3.fromRGB(255, 255, 255);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InputElement.UIPadding
			InputElement["p114"] = Instance.new("UIPadding", InputElement["ie112"]);
			InputElement["p114"]["PaddingTop"] = UDim.new(0, 8);
			InputElement["p114"]["PaddingLeft"] = UDim.new(0, 12);
			InputElement["p114"]["PaddingBottom"] = UDim.new(0, 8);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InputElement.UICorner
			InputElement["c115"] = Instance.new("UICorner", InputElement["ie112"]);
			InputElement["c115"]["CornerRadius"] = UDim.new(0, 5);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InputElement.InputName
			InputElement["in116"] = Instance.new("TextLabel", InputElement["ie112"]);
			InputElement["in116"]["BorderSizePixel"] = 0;
			InputElement["in116"]["TextXAlignment"] = Enum.TextXAlignment.Left;
			InputElement["in116"]["TextTransparency"] = 0.2;
			InputElement["in116"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
			InputElement["in116"]["TextSize"] = 18;
			InputElement["in116"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
			InputElement["in116"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			InputElement["in116"]["BackgroundTransparency"] = 1;
			InputElement["in116"]["Size"] = UDim2.new(0.85, 0, 1, 0);
			InputElement["in116"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			InputElement["in116"]["Text"] = Options.Name;
			InputElement["in116"]["Name"] = [[InputName]];

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InputElement.InputBox
			InputElement["ib117"] = Instance.new("TextBox", InputElement["ie112"]);
			InputElement["ib117"]["CursorPosition"] = -1;
			InputElement["ib117"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
			InputElement["ib117"]["PlaceholderColor3"] = Color3.fromRGB(255, 255, 255);
			InputElement["ib117"]["BorderSizePixel"] = 0;
			InputElement["ib117"]["TextTransparency"] = 0.2;
			InputElement["ib117"]["TextSize"] = 14;
			InputElement["ib117"]["BackgroundColor3"] = Color3.fromRGB(31, 31, 31);
			InputElement["ib117"]["FontFace"] = Font.new([[rbxassetid://11702779517]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
			InputElement["ib117"]["AnchorPoint"] = Vector2.new(1, 0);
			InputElement["ib117"]["PlaceholderText"] = [[Text]];
			InputElement["ib117"]["Size"] = UDim2.new(0, 42, 0, 25);
			InputElement["ib117"]["Position"] = UDim2.new(1, -8, 0, 2);
			InputElement["ib117"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
			InputElement["ib117"]["Text"] = [[]];
			InputElement["ib117"]["AutomaticSize"] = Enum.AutomaticSize.X;
			
			InputElement["p118"] = Instance.new("UIPadding", InputElement["ib117"])
			InputElement["p118"]["PaddingLeft"] = UDim.new(0, 8)
			InputElement["p118"]["PaddingRight"] = UDim.new(0, 8)

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InputElement.InputBox.UIStroke
			InputElement["st119"] = Instance.new("UIStroke", InputElement["ib117"]);
			InputElement["st119"]["Transparency"] = 0.96;
			InputElement["st119"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
			InputElement["st119"]["Color"] = Color3.fromRGB(255, 255, 255);

			-- StarterGui.SkyUI.MainFrame.Content.SectionContent.InputElement.InputBox.UICorner
			InputElement["c120"] = Instance.new("UICorner", InputElement["ib117"]);
			InputElement["c120"]["CornerRadius"] = UDim.new(0, 5);
			
			if Options.Start ~= false then
				InputElement["ib117"]["Text"] = Options.Start
			end
			
			function InputElement:SetFunction(Func)
				Options.Function = Func
			end
			
			function InputElement:SetName(Name)
				InputElement["in116"]["Text"] = Name
			end
			
			function InputElement:SetText(Text)
				InputElement["ib117"]["Text"] = Text
			end
			
			function InputElement:GetText()
				return InputElement["ib117"]["Text"]
			end
			
			InputElement["ie112"].MouseEnter:Connect(function()
				InputElement.IsHovered = true
				SkyUI:AnimateElement(InputElement["in116"], {TextTransparency = 0})
				SkyUI:AnimateElement(InputElement["st113"], {Transparency = 0.9})
			end)

			InputElement["ie112"].MouseLeave:Connect(function()
				InputElement.IsHovered = false

				if not InputElement.IsPressed then
					SkyUI:AnimateElement(InputElement["in116"], {TextTransparency = 0.2})
					SkyUI:AnimateElement(InputElement["st113"], {Transparency = 0.96})
				end
			end)

			InputElement["ie112"].InputBegan:Connect(function(Input_, GPE)
				if GPE then return end

				if Input_.UserInputType == Enum.UserInputType.MouseButton1 and InputElement.IsHovered then
					InputElement.IsPressed = true
					SkyUI:AnimateElement(InputElement["ie112"], {BackgroundColor3 = Color3.fromRGB(28, 28, 28)})
					SkyUI:AnimateElement(InputElement["st113"], {Transparency = 0.9})
				end
			end)

			InputElement["ie112"].InputEnded:Connect(function(Input_, GPE)
				if GPE then return end

				if Input_.UserInputType == Enum.UserInputType.MouseButton1 then
					InputElement.IsPressed = false

					if InputElement.IsHovered then
						SkyUI:AnimateElement(InputElement["ie112"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(InputElement["in116"], {TextTransparency = 0})
						SkyUI:AnimateElement(InputElement["st113"], {Transparency = 0.9})
					else
						SkyUI:AnimateElement(InputElement["ie112"], {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
						SkyUI:AnimateElement(InputElement["st113"], {Transparency = 0.96})
					end
				end
			end) 

			InputElement["ib117"]:GetPropertyChangedSignal("Text"):Connect(function()
				Options.Function(InputElement["ib117"]["Text"])
			end)
			
			return InputElement
		end
		
		return Section
	end
	
	function Interface:SetScale(ScaleValue)
		SkyUI:AnimateElement(Interface["scale1"], {Scale = ScaleValue})
	end
	
	function Interface:Remove()
		SkyUI:AnimateElement(Interface["scale1"], {Scale = 0.8})
		wait(0.1)
		Interface["g1"]:Destroy()
	end

	return Interface
end

return SkyUI
